<Window x:Class="FSDesktopUI.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cal="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro.Platform"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:FSDesktopUI.Views"
        mc:Ignorable="d"
        Title="FSTool" Height="680" Width="860"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"        WindowStartupLocation="CenterScreen"         cal:Message.Attach="[Gesture Ctrl+O]=[Action GetDirectoryPath]">
    <DockPanel ScrollViewer.CanContentScroll="True">
        <Menu IsMainMenu="True" DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open" InputGestureText="Ctrl+O" cal:Message.Attach="[Event Click]=[Action GetDirectoryPath]">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="FolderOpen" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save" IsEnabled="False">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ContentSave" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Mode">
                <MenuItem Header="_Rename (In the future maybe more modes)" IsEnabled="False" IsCheckable="True" IsChecked="True"></MenuItem>
            </MenuItem>
        </Menu>
        <Grid VerticalAlignment="Top" Margin="16">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="300" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <materialDesign:PackIcon Kind="Folder" VerticalAlignment="Center" />
            <TextBlock Grid.Column="1" Margin="8 0 0 0" VerticalAlignment="Center">Directory:</TextBlock>
            <TextBox Name="DirPath" Grid.Column="2" Margin="8 0 0 0" VerticalAlignment="Center" IsEnabled="False"></TextBox>
            <Button Grid.Column="3" Margin="8 0 0 0" cal:Message.Attach="[Event Click]=[Action GetDirectoryPath()]">Browse</Button>
            <materialDesign:Card Margin="32" Grid.Row="1" Grid.ColumnSpan="4" Height="400">
                <StackPanel Orientation="Horizontal" Margin="16" UseLayoutRounding="False">
                    <materialDesign:PackIcon Kind="UserQuestion" Height="64" Width="64" />
                    <TextBlock Margin="16 0 0 0" TextWrapping="Wrap">1. Select a folder containing the items to rename (Browse).<LineBreak/>2. Select the items to rename (CTRL+A to select all, SHIFT+Click for drag selection).
                    <LineBreak/>3. Select either prefix or suffix for positioning the identifying number.<LineBreak/>4. Enter a base string to rename the selected files with.<LineBreak/>5. Click Rename.</TextBlock>
                </StackPanel>
            </materialDesign:Card>
            <ListView Grid.Row="2" Grid.ColumnSpan="4" Margin="20" Name="Files" cal:Message.Attach="[Event SelectionChanged]=[Action HandleSelection($source)]">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Selected">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox IsChecked="{Binding Path=IsSelected, 
      RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Current Name" DisplayMemberBinding="{Binding OldName}" />
                        <GridViewColumn Header="New Name" DisplayMemberBinding="{Binding NewName}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <RadioButton Grid.Row="3" Grid.Column="1" Margin="0 10 0 0" VerticalAlignment="Top" GroupName="affix" Content="Suffix" Name="AddSuffix" />
            <RadioButton Grid.Row="3" Grid.Column="1" Margin="0 0 0 10" VerticalAlignment="Bottom" GroupName="affix" Content="Prefix" />
            <TextBox Name="BaseString" Grid.Row="3" Grid.Column="2" Margin="10 0 10 0" materialDesign:HintAssist.Hint="Base string all selected items will be renamed with"
                     Padding="0,10,0,0" cal:Message.Attach="[Event KeyDown]=[Action UpdateItemNamesThrottle()]"/>
            <Button Grid.Row="3" Grid.Column="3" Height="60" Content="Rename" cal:Message.Attach="[Event Click]=[Action RenameFiles()]" />

        </Grid>
    </DockPanel>
</Window>
